using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.IO;

namespace ConsoleApplicationEASTER
{
    public class ClassFunctions : ClassMultipleIncome
 {
        public int Substract(int x, int y)
        {
            return x - y;
        }

        public int Multiply(int x, int y)
        {
            return x * y;
        }

        public int Add(int x, int y)
        {
            return x + y;
        }

        public int Divide(int x, int y)
        {
            return x / y;
        }
    }


 public class ClassUserActivity
    {
        public static int inData1 { get; set; }
        public static int inData2 { get; set; }
    }


    class Program
    {
        static void Menu(){
            Console.WriteLine("1. Multiplikation" +
               Environment.NewLine + "2. Additation" +
                 Environment.NewLine + "3. Division" +
                     Environment.NewLine + "4. Substraktion" +
                         Environment.NewLine + "5. Multi list" +
                             Environment.NewLine + "6. Exit");
        }

        static string tal1() {
            return "Tal 1: ";
        }
        static string tal2()
        {
            return "Tal 2: ";
        }

        //http://www.csharp-station.com/Tutorial/CSharp/lesson17
        public enum Operator{
            Multiplication = 1,
            Addition,
            Division,
            Substraction,
            MultipleAddition,
            Exit
    }


        static void Main(string[] args)
        {
            Menu();


            // get value user provided
            //string volString = Console.ReadLine();
            int OperatorInt = Int32.Parse(Console.ReadLine());

            // perform explicit cast from
            // int to Volume enum type
            //Volume myVolume = (Volume)volInt;
            Operator IncomeInteger = (Operator)OperatorInt;
            

                Console.Clear();
                Console.WriteLine("**En simpel miniräknare**");

                //Get instance
                //ClassFunctions callFunction = new ClassFunctions();
                //ClassUserActivity userInput = new ClassUserActivity();
                ClassDisplayCalculator display = new ClassDisplayCalculator();
                
                Console.WriteLine();
                switch (IncomeInteger)
                {
                    case Operator.Multiplication:
                        Console.WriteLine("Case1 - Multiplikation");
                        Console.WriteLine("Skriv in två heltal.");
                                           

                                    Console.Write(tal1());
                                    ClassUserActivity.inData1 = Convert.ToInt32(Console.ReadLine());
                                    Console.Write(tal2());
                                    ClassUserActivity.inData2 = Convert.ToInt32(Console.ReadLine());


                        //Test display.

                                    //DisplayMultiplication
                                    display.DisplayMultiplication(ClassUserActivity.inData1, ClassUserActivity.inData2);

                                   // Console.Write("Svar: {0} * {1} = ", userInput.inData1, userInput.inData2);
                                    //Console.WriteLine(callFunction.multiplikation(userInput.inData1, userInput.inData2));
                                    //Console.ReadLine();
                                    Main(args);
                        break;

                    case Operator.Addition:
                        Console.WriteLine("Case2 - Addition");
                        Console.WriteLine("Skriv in två heltal.");

                         Console.Write(tal1());
                         ClassUserActivity.inData1 = Convert.ToInt32(Console.ReadLine());
                         Console.Write(tal2());
                         ClassUserActivity.inData2 = Convert.ToInt32(Console.ReadLine());

                         //DisplayMultiplication
                         display.DisplayAddition(ClassUserActivity.inData1, ClassUserActivity.inData2);


                       // Console.Write("Svar: {0} + {1} = ", userInput.inData1, userInput.inData2);
                        //Console.WriteLine(callFunction.addition(userInput.inData1, userInput.inData2));
                          //Console.ReadLine();
                         //
                         Main(args);
                        break;

                    case Operator.Division:
                        Console.WriteLine("Case3 - Division");
                        Console.WriteLine("Skriv in två heltal.");

                        Console.Write(tal1());
                        ClassUserActivity.inData1 = Convert.ToInt32(Console.ReadLine());
                        Console.Write(tal2());
                        ClassUserActivity.inData2 = Convert.ToInt32(Console.ReadLine());

                        //DisplayMultiplication
                        display.DisplayDiv(ClassUserActivity.inData1, ClassUserActivity.inData2);

                        //Console.Write("Svar: ");
                        //Console.WriteLine(callFunction.division(userInput.inData1, userInput.inData2));
                        //Console.ReadLine();
                        Main(args);


                        break;

                    case Operator.Substraction:
                        Console.WriteLine("Case4 - Substraktion");
                        Console.WriteLine("Skriv in två heltal.");

                        //Console.Write(tal1());
                        Console.Write("Skriv in tal 1: ");
                        ClassUserActivity.inData1 = Convert.ToInt32(Console.ReadLine());
                        //Console.Write(tal2());

                        Console.Write("Skriv in tal 2: ");
                        ClassUserActivity.inData2 = Convert.ToInt32(Console.ReadLine());

                        //DisplayMultiplication
                        display.DisplaySub(ClassUserActivity.inData1, ClassUserActivity.inData2);
                        //Console.WriteLine(callFunction.substraktion(userInput.inData1, userInput.inData2));
                       //Console.ReadLine();
                       Main(args);
                        break;

                    case Operator.MultipleAddition:
                          Console.WriteLine("MULTI = Addition - Substraktion, Press Q for menu.");
                          Console.WriteLine();

                          //ClassMultipleIncome listIncome = new ClassMultipleIncome();
                          int uInt;
                          //ClassDisplayCalculator display = new ClassDisplayCalculator();

                         
                    //Do while if readline is not null or "q"
                              do
                              {
                                  string uInput = Console.ReadLine();
                                  
                                  uInt = 0;
                                  //listIncome.Display(uInput);
                                  display.DisplayMultipleIncome(uInput);

                                  
                                  /*
                                  if (uInput.Contains("q") == true)
                                  {
                                      Main(args);
                                  }
                                  */

                                  /*
                                  if (int.TryParse(uInput, out uInt))
                                  {
                                      listIncome.AddTal(uInt);
                                  }
                                  else {
                                      Console.WriteLine("Endast siffror!");
                                  }
                                  */
                                  int summaObject = 0;
                                  Console.WriteLine("*******");
                                  foreach (int obj in display)
                                  {
                                      summaObject += obj;
                                      Console.Write(" + {0}", obj);
                                  }

                                  //Console.WriteLine("displayyy", display.GetEnumerator());
                                 // Console.WriteLine("displayyy {0}", display.GetEnumerator());
                                  Console.WriteLine("");
                                  Console.WriteLine("summaObject = {0}", summaObject);
                              } while (uInt != null);
                        break;

                    case Operator.Exit:
                        Console.WriteLine("Du har tryckt noll!");
                        
                        Environment.Exit(0);
                        break;
                      
                }
            

            Console.ReadKey();
        }
    }



 //https://msdn.microsoft.com/en-us/library/dscyy5s0.aspx

    //NOTIS!! -----  class UserActivity->MultipleIncome->Function->Display????? Korrekt?! Inheritence

 // Collection of tal objects. This class 
 // implements IEnumerable so that it can be used 
 // with ForEach syntax.
 public class ClassMultipleIncome {

     //int antal = 0;

    // Private members. 
   //protected internal List<ClassUserActivity> MultipleIncomeList = new List<ClassUserActivity>();
   protected internal List<int> MultipleIncomeList = new List<int>();
    // Public methods. //Add to list
   public void AddtoList(int x)
    {
        //MultipleIncomeList.Add(new ClassUserActivity { inData1 = x });
        MultipleIncomeList.Add(x);
    }


     //Fattar inte riktigt varför denna behövs?
    //http://www.dotnetperls.com/ienumerable
     
    public IEnumerator GetEnumerator()
    {
        foreach (int obj in MultipleIncomeList)
        {
            //antal = +theAnimal.inData1;

            yield return obj;
           // yield return antal;
        }
    }

 }

  

public class ClassDisplayCalculator  : ClassFunctions
    {
            internal void DisplayAddition(int tal1, int tal2)
            {
                Console.Write("Svar: {0} + {1} = ", tal1, tal2);
                Console.WriteLine(this.Add(tal1, tal2));
                Console.ReadLine();
            }

            public void DisplayDiv(int tal1, int tal2)
            {
                Console.Write("Svar: {0} / {1} = ", tal1, tal2);
                Console.WriteLine(this.Divide(tal1, tal2));
                Console.ReadLine();
            }

            public void DisplaySub(int tal1, int tal2)
            {
                Console.Write("Svar: {0} - {1} = ", tal1, tal2);
                Console.WriteLine(this.Substract(tal1, tal2));
                Console.ReadLine();
            }

            public void DisplayMultiplication(int tal1, int tal2)
            {
                Console.Write("Svar: {0} * {1} = ", tal1, tal2);
                Console.WriteLine(this.Multiply(tal1,tal2));
                Console.ReadLine();
               
            }

        public void DisplayMultipleIncome(string checkIncomeString)
        {

            int ifInteger;
           // bool contains = checkIfq.Contains("q");

            bool ifValid = checkIncomeString.Contains("q");

            if (ifValid)
            {
                Console.Clear();
                Console.WriteLine("DU HAR VALT ATT AVSLUTA!");
                //Main(args);
                //Console.Clear();

            }
            else if (int.TryParse(checkIncomeString, out ifInteger))
            {
                //int.TryParse(checkIfq, out addInt;
               // int addInt = Convert.ToInt32(checkIfq);
                //this.AddtoList(ifInteger);
                MultipleIncomeList.Add(ifInteger);
                Console.Clear();
            }
            else
            {
                Console.Clear();
                Console.WriteLine("Endast siffror!");
            }

    }
 }
}


